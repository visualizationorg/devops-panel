{"version":3,"file":"static/js/262.edcce430.chunk.js","mappings":"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","sources":["components/DataGrid.js","../node_modules/@mui/icons-material/esm/Public.js","../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/icons-material/esm/Link.js","pages/admin/project-list.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Portal } from '@mui/base/Portal';\r\nimport { Pagination as MuiPagination } from '@mui/material';\r\n\r\n// mui data grid\r\nimport {\r\n    DataGrid,\r\n    // GridActionsCellItem,\r\n    // GridColumnMenu,\r\n    gridClasses,\r\n    gridPageCountSelector,\r\n    GridPagination,\r\n    // GridToolbar,\r\n    // GridToolbarColumnsButton,\r\n    // GridToolbarContainer,\r\n    // GridToolbarDensitySelector,\r\n    // GridToolbarFilterButton,\r\n    GridToolbarQuickFilter,\r\n    trTR,\r\n    enUS,\r\n    useGridApiContext,\r\n    useGridSelector\r\n} from '@mui/x-data-grid';\r\n\r\n// project-import\r\nimport { ThemeMode } from 'config';\r\n\r\n// third-party\r\nimport { useIntl } from 'react-intl';\r\n\r\n// ==============================|| GRID PAGINATION ||============================== //\r\nfunction Pagination({ page, onPageChange, className }) {\r\n    const apiRef = useGridApiContext();\r\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n    return (\r\n        <MuiPagination\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            color=\"primary\"\r\n            className={className}\r\n            count={pageCount}\r\n            page={page + 1}\r\n            onChange={(event, newPage) => {\r\n                onPageChange(event, newPage - 1);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    className: PropTypes.string,\r\n    /**\r\n     * Callback fired when the page is changed.\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\r\n     * @param {number} page The page selected.\r\n     */\r\n    onPageChange: PropTypes.func.isRequired,\r\n    /**\r\n     * The zero-based index of the current page.\r\n     */\r\n    page: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CustomPagination(props) {\r\n    return <GridPagination ActionsComponent={Pagination} {...props} />;\r\n};\r\n\r\nfunction CustomToolbar() {\r\n    return (\r\n        <Portal container={() => document.getElementById('filter-panel')}>\r\n            <GridToolbarQuickFilter variant=\"outlined\" size=\"small\" />\r\n        </Portal>\r\n    );\r\n};\r\n\r\n// ==============================|| GRID SKELETON ||============================== //\r\nexport default function GridSkeleton(props) {\r\n    const theme = useTheme();\r\n    const intl = useIntl();\r\n\r\n    const localeText = useMemo(\r\n        () => {\r\n            if (theme.language === 'tr')\r\n                return trTR.components.MuiDataGrid.defaultProps.localeText;\r\n            // else if (theme.language === 'en')\r\n            else\r\n                return enUS.components.MuiDataGrid.defaultProps.localeText;\r\n        },\r\n        // eslint-disable-next-line\r\n        [theme, intl]\r\n    );\r\n\r\n    return (\r\n        <DataGrid\r\n            {...props}\r\n            localeText={{\r\n                ...localeText,\r\n                MuiTablePagination: {\r\n                    ...localeText.MuiTablePagination,\r\n                    labelDisplayedRows: ({ from, to, count }) =>\r\n                        `${from}-${to} / ${count}`,\r\n                },\r\n            }}\r\n            ignoreDiacritics\r\n            getRowClassName={(params) =>\r\n                params.indexRelativeToCurrentPage % 2 === 0 ? 'even' : 'odd'\r\n            }\r\n            sx={{\r\n                [`& .${gridClasses.row}.even`]: (theme.palette.mode === ThemeMode.LIGHT) ? {\r\n                    backgroundColor: theme.palette.background.default,\r\n                    '&:hover, &.Mui-hovered': {\r\n                        backgroundColor: theme.palette.divider,\r\n                        '@media (hover: none)': {\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                    },\r\n                } : {},\r\n                ...props.sx\r\n            }}\r\n            slots={{ pagination: CustomPagination, toolbar: CustomToolbar, ...props.slots }}\r\n            // slotProps={{\r\n            //     toolbar: {\r\n            //         showQuickFilter: true,\r\n            //         printOptions: { disableToolbarButton: true },\r\n            //         csvOptions: { disableToolbarButton: true },\r\n            //     },\r\n            // }}\r\n            // style={{ backgroundColor: 'white' }}\r\n            initialState={{\r\n                pagination: {\r\n                    paginationModel: {\r\n                        pageSize: props.pageSize ?? 10,\r\n                        /* page: 0 // default value will be used if not passed */\r\n                    },\r\n                },\r\n            }}\r\n            pageSizeOptions={[10, 25, 50, 100]}\r\n            autoHeight={true}\r\n            disableRowSelectionOnClick\r\n            disableColumnMenu\r\n            disableColumnFilter\r\n            disableColumnSelector\r\n            disableDensitySelector\r\n        />\r\n    );\r\n};\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39\"\n}), 'Public');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1M8 13h8v-2H8zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5\"\n}), 'Link');","import React, { useMemo } from 'react';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Link, Stack } from '@mui/material';\r\n\r\n// project imports\r\nimport CustomGrid from 'components/DataGrid';\r\nimport MainCard from 'components/MainCard';\r\nimport { getStorageValue, STORAGE_KEYS } from 'utils/storage';\r\n\r\n// assets\r\nimport { Link as LinkIcon, Lock as LockIcon, Public as PublicIcon } from '@mui/icons-material/';\r\n\r\n// third-party\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport moment from 'moment';\r\n\r\n// ==============================|| PROJECT LIST ||============================== //\r\n\r\nexport default function ProjectList() {\r\n  const theme = useTheme();\r\n  const intl = useIntl();\r\n\r\n  const items = useLoaderData();\r\n  const rows = items?.value || [];\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        field: 'name',\r\n        headerName: intl.formatMessage({ id: \"name\" }),\r\n        description: intl.formatMessage({ id: \"name\" }),\r\n        flex: 1,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'description',\r\n        headerName: intl.formatMessage({ id: \"description\" }),\r\n        description: intl.formatMessage({ id: \"description\" }),\r\n        flex: 2,\r\n        minWidth: 150\r\n      },\r\n      {\r\n        field: 'lastUpdateTime',\r\n        headerName: \"Son Güncelleme\",\r\n        description: \"Son Güncelleme\",\r\n        flex: 1,\r\n        minWidth: 150,\r\n        renderCell: (params) => Boolean(params.value) && moment(params.value).format('LLL')\r\n      },\r\n      {\r\n        field: 'visibility',\r\n        headerName: 'Visibility',\r\n        description: 'Visibility',\r\n        flex: 0.5,\r\n        minWidth: 100,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        renderCell: (params) => (\r\n          params.value === 'public'\r\n            ? <PublicIcon style={{ fontSize: '20px', color: theme.palette.success.main }} />\r\n            : <LockIcon style={{ fontSize: '20px', color: theme.palette.error.main }} />\r\n        ),\r\n      },\r\n      {\r\n        field: 'url',\r\n        headerName: intl.formatMessage({ id: \"url\" }),\r\n        description: intl.formatMessage({ id: \"url\" }),\r\n        flex: 0.5,\r\n        minWidth: 100,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        renderCell: (params) => {\r\n          const organization = getStorageValue(STORAGE_KEYS.ORGANIZATION, '');\r\n          const projectUrl = `https://dev.azure.com/${organization}/${params.row.id}`;\r\n          return (\r\n            <Link href={projectUrl} target=\"_blank\" rel=\"noopener\">\r\n              <LinkIcon style={{ fontSize: '20px', color: theme.palette.primary.main }} />\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    // eslint-disable-next-line\r\n    [theme, intl]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainCard\r\n        content={false}\r\n        title={<FormattedMessage id=\"project-list\" />}\r\n        secondary={\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Box id=\"filter-panel\" />\r\n          </Stack>\r\n        }\r\n      >\r\n        <CustomGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          // getRowId={(row) => row.originId}\r\n          getRowHeight={() => 'auto'}\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaderTitle\": {\r\n              whiteSpace: \"normal\",\r\n              lineHeight: \"normal\"\r\n            },\r\n            \"& .MuiDataGrid-columnHeader\": {\r\n              // Forced to use important since overriding inline styles\r\n              height: \"unset !important\"\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              // Forced to use important since overriding inline styles\r\n              maxHeight: \"168px !important\"\r\n            },\r\n            \"& .MuiDataGrid-row\": {\r\n              minHeight: \"66.5px !important\"\r\n              // maxHeight: \"168px !important\"\r\n            },\r\n            // \"& .MuiDataGrid-cell\": {\r\n            //   // Forced to use important since overriding inline styles\r\n            //   whiteSpace: \"normal\",\r\n            //   lineHeight: \"normal\",\r\n            //   height: \"unset !important\",\r\n            // }\r\n            '& .MuiDataGrid-cell:first-of-type': {\r\n              paddingLeft: '24px', // Add extra space for first column\r\n            },\r\n            '& .MuiDataGrid-columnHeader:first-of-type': {\r\n              paddingLeft: '24px', // Add extra space for first header\r\n            },\r\n          }}\r\n        />\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Pagination","_ref","page","onPageChange","className","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","_jsx","MuiPagination","variant","shape","color","count","onChange","event","newPage","CustomPagination","props","GridPagination","_objectSpread","ActionsComponent","CustomToolbar","Portal","container","document","getElementById","children","GridToolbarQuickFilter","size","GridSkeleton","_props$pageSize","theme","useTheme","intl","useIntl","localeText","useMemo","language","trTR","components","MuiDataGrid","defaultProps","enUS","DataGrid","MuiTablePagination","labelDisplayedRows","_ref2","from","to","concat","ignoreDiacritics","getRowClassName","params","indexRelativeToCurrentPage","sx","_defineProperty","gridClasses","row","palette","mode","ThemeMode","LIGHT","backgroundColor","background","default","divider","slots","pagination","toolbar","initialState","paginationModel","pageSize","pageSizeOptions","autoHeight","disableRowSelectionOnClick","disableColumnMenu","disableColumnFilter","disableColumnSelector","disableDensitySelector","createSvgIcon","d","ProjectList","items","useLoaderData","rows","value","columns","field","headerName","formatMessage","id","description","flex","minWidth","renderCell","Boolean","moment","format","headerAlign","align","PublicIcon","style","fontSize","success","main","LockIcon","error","organization","getStorageValue","STORAGE_KEYS","ORGANIZATION","projectUrl","Link","href","target","rel","LinkIcon","primary","_Fragment","MainCard","content","title","FormattedMessage","secondary","Stack","direction","spacing","Box","CustomGrid","getRowHeight","whiteSpace","lineHeight","height","maxHeight","minHeight","paddingLeft"],"sourceRoot":""}